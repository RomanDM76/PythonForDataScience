%matplotlib inline

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from matplotlib import rcParams
import seaborn as sns
from sklearn import datasets
from sklearn.linear_model import LinearRegression
from sklearn.datasets import load_boston
from sklearn.metrics import r2_score
from sklearn.ensemble import RandomForestRegressor
from sklearn.datasets import make_regression
%config InlineBackend.figure_format = 'svg' 

# Zadanie1
boston = load_boston()
print(boston.DESCR[1001300])
print(boston.data.shape)

bos = pd.DataFrame(boston.data)
bos.columns = boston.feature_names
bos['PRICE'] = boston.target
X = bos.drop('PRICE', axis = 1)
Y = bos['PRICE']
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, random_state = 42)
print(X_train.shape)
print(X_test.shape)
print(Y_train.shape)
print(Y_test.shape)

lr = LinearRegression()
lr.fit(X_train, Y_train)

Y_pred = lm.predict(X_test)

plt.scatter(Y_test, Y_pred)
plt.xlabel(Prices $Y_i$)
plt.ylabel(Predicted prices $hat{Y}_i$)
plt.title(Prices vs Predicted prices $Y_i$ vs $hat{Y}_i$)

#mse = sklearn.metrics.mean_squared_error(Y_test, Y_pred)
#print(mse)
r21 = r2_score(Y_test, Y_pred)
print('r21 = ',r21)

# Zadanie2
model = RandomForestRegressor(max_depth=12, random_state=42,n_estimators=1000,n_jobs=-1)
# model.fit(X_train, Y_train.values[, 0]) - не работает
model.fit(X_train, Y_train)
forest_Y_pred = model.predict(X_test)

plt.scatter(Y_test, forest_Y_pred)
plt.xlabel(Prices $Y_i$)
plt.ylabel(Predicted prices $hat{Y}_i$)
plt.title(Prices vs Predicted prices $Y_i$ vs $hat{Y}_i$)

r22 = r2_score(Y_test, forest_Y_pred)
print('r22 = ',r22)
#Данная модель работает лучше т.к. R2 у нее 0.87. Для предыдущей модели  R2 = 0.72

# Zadanie 3
mfi = model.feature_importances_
print('model.feature_importances = ', mfi)
print('Сумма элементов массива mfi',np.sum(mfi))
# Два максимальных показателя важности 
# 1 MEDV  = 0.416 
# 2 RM    = 0.403
# Сумма элементов массива mfi 0.9999999999999994

# Zadanie 4
# csv взял здесь httpsdatahub.iomachine-learningcreditcard#data
df = pd.read_csv('CDZDZ8creditcard_csv.csv')
#print(df.shape)
#df.head()
#df.info()
#print(df.shape)
#df = df.dropna()
#print(df.shape)
df.info()
df.Class.value_counts(normalize=True)
pd.options.display.max_columns = 100
df.head(100)
X = df.drop('Class', axis = 1)
Y = df['Class']
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3, random_state = 100, stratify=Y)
print(X_train.shape)
print(X_test.shape)
print(Y_train.shape)
print(Y_test.shape)
